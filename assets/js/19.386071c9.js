(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{327:function(n,t,a){"use strict";a.r(t);var e=a(16),i=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h3",{attrs:{id:"_1-水平居中：行内元素解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-水平居中：行内元素解决方案"}},[n._v("#")]),n._v(" 1.水平居中：行内元素解决方案")]),n._v(" "),a("p",[n._v("适用元素：文字，链接，及其其它inline或者inline-*类型元素（inline-block，inline-table，inline-flex）")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('html部分代码:\n    <div>文字元素</div>\n    <nav>\n  <a href="">链接元素01</a>\n  <a href="">链接元素02</a>\n  <a href="">链接元素03</a>\n    </nav>\n\ncss部分代码:\n    nav, div{\n    text-align: center;\n        }\n/*\n解决方案：\n将inline元素包裹在一个display属性为block的父级元素中（如,div, nav)\n设置这个父级元素属性: text-align:center即可\n*/\n\n/* 现在大家可以看到nav和div中的子元素水平居中了 */\n')])])]),a("h3",{attrs:{id:"_2-水平居中：块状元素解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-水平居中：块状元素解决方案"}},[n._v("#")]),n._v(" 2. 水平居中：块状元素解决方案")]),n._v(" "),a("p",[n._v("对于块状元素（display:block）来说，我们需要将它的左右外边距（即，margin-left，margin-right）设置为auto，即可实现块状元素的居中，如下：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(' html部分代码:\n    <div class="center">\n  水平居中的块状元素\n    </div>\n    <p class="center">水平居中的块状元素</p>\n\n css部分代码:\n/*\n注意：需要居中的块元素需要有固定的宽度，否则无法实现居中，因为占据100%宽度\n*/\ndiv,p {\n  width: 200px; /* 这里需要设置元素宽度 */\n  height: 150px;\n  background: #222;\n  color: #FFF;\n}\n/* 定义居中关键属性 */\n.center{\n  /* 这里可以设置顶端外边距 */\n  margin: 10px auto;\n}\n/* 现在大家可以看到居中效果的块状元素了 */\n')])])]),a("h3",{attrs:{id:"_3-水平居中：多个块状元素解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-水平居中：多个块状元素解决方案"}},[n._v("#")]),n._v(" 3.水平居中：多个块状元素解决方案")]),n._v(" "),a("p",[n._v("如果页面里有多个块状元素需要水平排列居中，可以将元素的display属性设置为inline-block，并且把父元素的text-align属性设置为center即可实现。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(' html部分代码:\n    <div class="center">\n    水平居中的块状元素\n    </div>\n    <div class="center">\n    水平居中的块状元素\n    </div>\n\n\x3c!--\n现在大家可以看到以上两个块状元素水平横向排列并且居中\n提示：如果需要将以上两个元素垂直排列居中的话，使用上一节的margin: 0 auto;即可实现\n--\x3e\n  css部分代码:\n/*\n解决方案：\n设置这几个块状的元素display属性为inline-block，并且设置父元素text-align属性为center即可\n*/\n.center{\n  display:inline-block;\n}\nbody{\n  text-align:center;\n}\n/* 元素美化 */\ndiv{\n  width: 100px;\n  background: #222;\n  height: 50px;\n  color: #FFF;\n  padding: 10px;\n}\n')])])]),a("h3",{attrs:{id:"_4-水平居中：多个块状元素解决方案-使用flexbox布局实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-水平居中：多个块状元素解决方案-使用flexbox布局实现"}},[n._v("#")]),n._v(" 4.水平居中：多个块状元素解决方案 (使用flexbox布局实现)")]),n._v(" "),a("p",[n._v("使用flexbox布局，只需要把待处理的块状元素的父元素添加属性display:flex及justify-content:center即可")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(" html部分代码:\n\n<div>水平居中的块状元素</div>\n<div>水平居中的块状元素</div>\n\n css部分代码:\n\n解决方案：\n设置需要水平居中的块状元素的父元素display为flex ，并且justify-content属性为center即可\n\nbody{\n  display: flex;\n  justify-content: center;\n}\n/* 页面美化元素 */\ndiv{\n  width: 100px;\n  background: #222;\n  height: 50px;\n  color: #FFF;\n  padding: 10px;\n  margin: 10px;\n}\n")])])]),a("h3",{attrs:{id:"_5-垂直居中：单行的行内元素解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-垂直居中：单行的行内元素解决方案"}},[n._v("#")]),n._v(" 5. 垂直居中：单行的行内元素解决方案")]),n._v(" "),a("p",[n._v("当一个行内元素，即inline，inline-*类型的元素需要居中的话，可以将它的height和line-height同时设置为父元素的高度即可实现垂直居中效果。")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(' html部分代码:\n\n    <div id="container">\n    <a href="#">hello, gbtags.com</a>\n    </div>\n\n  css部分代码:\n\n解决方案：将inline元素的高度和line-height设备为一致即可\n#container{\n  background: #222;\n  height: 200px;\n}\n/*  以下代码中，将a元素的height和line-height设置的和父元素一样高度即可实现垂直居中 */\na{\n  height: 200px;\n  line-height:200px;  \n  color: #FFF;\n}\n')])])]),a("h3",{attrs:{id:"_6-垂直居中：多行的行内元素解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-垂直居中：多行的行内元素解决方案"}},[n._v("#")]),n._v(" 6.垂直居中：多行的行内元素解决方案")]),n._v(" "),a("p",[n._v("组合使用display:table-cell和vertical-align:middle属性来定义需要居中的元素的父容器元素生成效果，如下：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(' html部分代码:\n\n<div class="container">\n  <a href="#">\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Reiciendis blanditiis optio accusamus quia sapiente at labore consectetur in quasi veritatis possimus quod nihil aliquam vero saepe rem quas. Ratione eligendi!\n  </a>\n</div>\n\n  css部分代码:\n解决方案：\n使用display:table-cell和vertical-align来控制元素的居中效果\n.container{\n  background: #222;\n  width: 300px;\n  height: 300px;\n  /* 以下属性垂直居中 */\n  display: table-cell;\n  vertical-align:middle;\n}\na{\n  color:#FFF;\n}\n')])])]),a("h3",{attrs:{id:"_7-垂直居中：已知高度的块状元素解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-垂直居中：已知高度的块状元素解决方案"}},[n._v("#")]),n._v(" 7. 垂直居中：已知高度的块状元素解决方案")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('html代码：\n\n<div class="item">\n</div>\n\ncss代码：\n\n解决方案：将待居中元素设置为绝对定位，并且设置margin-top为居中元素高度一半的负值\ndiv{\n  width: 100px;\n  height: 100px;\n  background: #222\n}\n/* 以下为居中代码 */\n.item{\n  top: 50%;\n  margin-top: -50px;\n  position: absolute;\n  padding:0;\n}\n/* 现在可以看到这个元素垂直居中了，如果元素有padding设置，请自己相对计算一下margin-top值 */\n')])])]),a("h3",{attrs:{id:"_8-垂直居中：未知高度的块状元素解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-垂直居中：未知高度的块状元素解决方案"}},[n._v("#")]),n._v(" 8.垂直居中：未知高度的块状元素解决方案")]),n._v(" "),a("p",[n._v("对于无法知道高度的元素，使用transform属性来垂直移动来实现垂直居中：")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('html代码：\n    <div class="item">\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet sint repellendus ab aut quisquam eligendi est in deleniti.\n</div>\n\ncss代码：\n解决方案：\n因为无法指定margin-top的偏移量，所以这里使用transform属性，垂直移动-50%即可\ndiv{\n  width: 150px;\n  background: #222;\n  color: #FFF;\n}\n/* 元素垂直居中代码 */\n.item{\n  top: 50%;\n  position: absolute;\n  transform: translateY(-50%); /* 这里我们使用css3的transform来达到类似效果 */\n}\n')])])]),a("h3",{attrs:{id:"_9-水平垂直居中：已知高度和宽度的元素解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-水平垂直居中：已知高度和宽度的元素解决方案"}},[n._v("#")]),n._v(" 9. 水平垂直居中：已知高度和宽度的元素解决方案")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('html代码：\n\n<div class="item">\n</div>\ncss代码：\n\n解决方案：\n将设置元素绝对定位，并且设置margin-left和margin-right为居中元素(高度或宽度/2)的负值即可\ndiv{\n  width: 150px;\n  height: 150px;\n  background: #222;\n  color: #FFF;\n}\n.item{\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin-top: -75px;\n  margin-left: -75px;\n}\n/* 以上代码即可保证一个已知高度和宽度的元素水平垂直都居中 */\n')])])]),a("h3",{attrs:{id:"_10-水平垂直居中：未知高度和宽度元素解决方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-水平垂直居中：未知高度和宽度元素解决方案"}},[n._v("#")]),n._v(" 10.水平垂直居中：未知高度和宽度元素解决方案")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('html代码：\n\n<div class="item">\n  Lorem ipsum dolor sit amet, consectetur adipisicing elit. Cupiditate nostrum quaerat debitis.\n</div>\n\ncss代码：\n\n解决方案：将设置元素绝对定位，并且设置transform的translate为Ｘ，Ｙ轴同时移动-50%即可\ndiv{\n  background: #222;\n  color: #FFF;\n}\n/* 以下代码保证元素在水平和垂直方向上绝对居中 */\n.item{\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n')])])]),a("h3",{attrs:{id:"_11-水平垂直居中：使用flex布局实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-水平垂直居中：使用flex布局实现"}},[n._v("#")]),n._v(" 11.水平垂直居中：使用flex布局实现")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(' html代码：\n\n<div class="parent">\n  <div class="item"></div>\n</div>\n css代码：\n\n解决方案：设置flex布局，并且定义居中元素的父元素justify-content和align-items属性为center即可\n/* 子元素CSS */\n.item{\n  background: #222;\n  color: #FFF;\n  width: 100px;\n  height: 100px;\n}\n.parent{\n  display: flex;\n  justify-content:center;\n  align-items: center;\n  /* 注意这里需要设置高度来查看垂直居中效果 */\n  background: #AAA;\n  height: 300px;\n}\n')])])])])}),[],!1,null,null,null);t.default=i.exports}}]);